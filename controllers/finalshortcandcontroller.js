const FinalShortCand = require("../models/FinalShortlistedCandSchema.js");

class FinalShortlistedCandController {
  static addFinalShortCand = async (req, res) => {
    const { cand_id, job_id } = req.body;
    if (cand_id && job_id) {
      try {
        let str = "EUR-FC-";
        let x = Date.now().toString(8);
        let y = x.toString().substr(-3);
        let z = Math.floor(Math.random() * 1000);
        let autoGeneratedshortlisted_cand_Id = str + y + z;
        const newFinalShortCand = new FinalShortCand({
          shortlisted_cand_Id: autoGeneratedshortlisted_cand_Id,
          cand_id: cand_id,
          job_id: job_id,
        });
        newFinalShortCand.save();

        res.send({
          status: "Success",
          message: "New Final Shortlisted candidates Created",
        });
      } catch (error) {
        console.log("New", error);
        res.send({
          status: "Failed",
          message: "Sorry, Failed to create new Final Shortlisted candidates ",
        });
      }
    } else {
      res.send({
        status: "Failed",
        message:
          "Sorry, Failed to create new Final Shortlisted candidates (fill all fields)",
      });
    }
  };

  static getAllCandRes = async (req, res) => {
    try {
      const getAllFinalShortCand = await FinalShortCand.find({});
      res.send({ getAllFinalShortCand });
    } catch (error) {
      res.send({
        status: "Failed",
        message: "Failed to retrieve Final Shortlisted candidates",
      });
    }
  };

  static getCandRes = async (req, res) => {
    try {
      const getCandR = await FinalShortCand.find({ cand_id: req.params.cid });
      res.send({ getCandR });
    } catch (error) {
      res.send({
        status: "Failed",
        message: "Failed to retrieve Candidate Resume",
      });
    }
  };
}

module.exports = FinalShortlistedCandController;
